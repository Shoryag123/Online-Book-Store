-- Create Database
CREATE DATABASE Sql_Project;

-- Use Database
Use Sql_Project;

-- Create Tables
CREATE TABLE Books (
    Book_ID int primary key,
    Title varchar(100),
    Author varchar(100),
    Genre varchar(50),
    Published_Year int,
    Price decimal(10, 2),
    Stock int
);

CREATE TABLE Customers (
    Customer_ID int primary key,
    Name varchar(100),
    Email varchar(100),
    Phone int(10),
    City varchar(50),
    Country varchar(150)
);

CREATE TABLE Orders (
    Order_ID int primary key,
    Customer_ID int references Customers(Customer_ID),
    Book_ID int references Books(Book_ID),
    Order_Date date,
    Quantity int,
    Total_Amount decimal(10, 2)
);


SELECT * FROM Books;
SELECT * FROM Customers;
SELECT * FROM Orders;


-- 1) Retrieve all books in the "Fiction" genre:
select * from books 
where Genre = 'Fiction';

-- 2) Find books published after the year 1950:
select * from books 
where Published_Year >1950;

-- 3) List all customers from the Canada:
select * from Customers 
where Country = 'Canada';

-- 4) Show orders placed in November 2023:
select * from Orders
where Order_Date between '2023-11-01' and '2023-11-30';

-- 5) Retrieve the total stock of books available:
select sum(Stock) as TotalStock from Books;

-- 6) Find the details of the most expensive book:
select * from Books
Order by Price Desc limit 1;

-- 7) Show all customers who ordered more than 1 quantity of a book:
Select c.Name,o.Quantity 
from Customers c
Join Orders o
on c.Customer_Id = o.Customer_Id
where o.Quantity > 1;

-- 8) Retrieve all orders where the total amount exceeds $20:
select * from orders
where Total_amount > 20;

-- 9) List all genres available in the Books table:
select Genre from books
group by genre;

-- 10) Find the book with the lowest stock:
select * from books
order by stock limit 1;

-- 11) Calculate the total revenue generated from all orders:
select sum(Total_Amount) as Total_Revenue from orders;


ADVANCE QUESTIONS ---------

-- 1) Retrieve the total number of books sold for each genre:
select b.genre,sum(o.quantity)
from books b
Join Orders o
on b.book_id = o.book_id
group by b.genre;

-- 2) Find the average price of books in the "Fantasy" genre:
select genre,avg(price) from books
where genre = 'Fantasy';

-- 3) List customers who have placed at least 2 orders:
select c.name,count(o.order_id)
from Customers c
Join Orders o
on c.customer_id = o.book_id
group by c.name
having count(o.order_id)>2;

-- 4) Find the most frequently ordered book:
SELECT o.Book_id, b.title, COUNT(o.order_id) AS ORDER_COUNT
FROM orders o
JOIN books b ON o.book_id=b.book_id
GROUP BY o.book_id, b.title
ORDER BY ORDER_COUNT DESC LIMIT 1;

-- 5) Show the top 3 most expensive books of 'Fantasy' Genre :
select title,genre,price from books
where genre = 'fantasy'
order by price desc limit 3;

-- 6) Retrieve the total quantity of books sold by each author:
select b.author,sum(o.quantity) 
from Books b
Join Orders o
on b.book_id = o.book_id
group by b.author;

-- 7) List the cities where customers who spent over $30 are located:
select c.city
from Customers c
Join Orders o
on c.Customer_id = o.Customer_id
where o.total_amount>30
group by c.city;

-- 8) Find the customer who spent the most on orders:
select c.name,sum(o.total_amount)
from Customers c
Join Orders o
on c.Customer_id = o.Customer_id
group by c.name
order by o.total_amount desc limit 1;

-- 9) Calculate the stock remaining after fulfilling all orders:
select b.book_id,b.title,b.stock as Total_Qty,sum(o.quantity) as Purchase_Qty,b.stock - sum(o.quantity)
as Remaining_Qty from books b
left Join Orders o
on b.book_id = o.book_id
group by b.book_id,b.title;




















































































